#pragma checksum "C:\Developing Windows 10 Universal Apps\Demos\xaml_xamluibasics\CS\AppUIBasics\ControlPages\SplitViewPage.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "48111DB624845C7603372209EF9CF503"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AppUIBasics.ControlPages
{
    partial class SplitViewPage : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        internal class XamlBindingSetters
        {
            static bool shouldUpdate(int expectedPhase, int currentPhase)
            {
                return (currentPhase == -1 || currentPhase == expectedPhase);
            }
                  
            public static void Set_Windows_UI_Xaml_Controls_SplitView_PaneBackground(global::Windows.UI.Xaml.Controls.SplitView obj, global::Windows.UI.Xaml.Media.Brush value, string targetNullValue)
                {
                    if (value == null && targetNullValue != null)
                    {
                        value = (global::Windows.UI.Xaml.Media.Brush) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.Brush), targetNullValue);
                    }
                    obj.PaneBackground = value;
                }
            public static void Set_Windows_UI_Xaml_Controls_SplitView_IsPaneOpen(global::Windows.UI.Xaml.Controls.SplitView obj, global::System.Boolean value)
                {
                    obj.IsPaneOpen = value;
                }
            public static void Set_Windows_UI_Xaml_Controls_SplitView_OpenPaneLength(global::Windows.UI.Xaml.Controls.SplitView obj, global::System.Double value)
                {
                    obj.OpenPaneLength = value;
                }
            public static void Set_Windows_UI_Xaml_Documents_Run_Text(global::Windows.UI.Xaml.Documents.Run obj, global::System.String value, string targetNullValue)
                {
                    if (value == null && targetNullValue != null)
                    {
                            value = targetNullValue;
                    }
                    obj.Text = value;
                }
            public static void Set_Windows_UI_Xaml_Controls_SplitView_CompactPaneLength(global::Windows.UI.Xaml.Controls.SplitView obj, global::System.Double value)
                {
                    obj.CompactPaneLength = value;
                }
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
                {
                    if (value == null && targetNullValue != null)
                    {
                        value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                    }
                    obj.ItemsSource = value;
                }
            public static void Set_Windows_UI_Xaml_Controls_SymbolIcon_Symbol(global::Windows.UI.Xaml.Controls.SymbolIcon obj, global::Windows.UI.Xaml.Controls.Symbol value)
                {
                    obj.Symbol = value;
                }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
                {
                    if (value == null && targetNullValue != null)
                    {
                            value = targetNullValue;
                    }
                    obj.Text = value;
                }
        };

        private class SplitViewPage_obj2_Bindings : 
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ISplitViewPage_Bindings
        {
            private global::AppUIBasics.ControlPages.NavLink dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = -2;
            private const int DATA_CHANGED = -1;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.SymbolIcon obj3;
            private global::Windows.UI.Xaml.Controls.TextBlock obj4;

            public SplitViewPage_obj2_Bindings()
            {
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 3:
                        this.obj3 = (global::Windows.UI.Xaml.Controls.SymbolIcon)target;
                        break;
                    case 4:
                        this.obj4 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 global::AppUIBasics.ControlPages.NavLink data = args.NewValue as global::AppUIBasics.ControlPages.NavLink;
                 if (args.NewValue != null && data == null)
                 {
                    throw new global::System.ArgumentException("Incorrect type passed into template. Based on the x:DataType global::AppUIBasics.ControlPages.NavLink was expected.");
                 }
                 this.SetDataRoot(data);
                 this.Update();
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                return nextPhase;
            }

            public void ResetTemplate()
            {
            }

            // ISplitViewPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            // SplitViewPage_obj2_Bindings

            public void SetDataRoot(global::AppUIBasics.ControlPages.NavLink newDataRoot)
            {
                this.dataRoot = newDataRoot;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::AppUIBasics.ControlPages.NavLink obj, int phase)
            {
                if (obj != null)
                {
                    if (phase == NOT_PHASED || phase == 0)
                    {
                        this.Update_Symbol(obj.Symbol, phase);
                        this.Update_Label(obj.Label, phase);
                    }
                }
            }
            private void Update_Symbol(global::Windows.UI.Xaml.Controls.Symbol obj, int phase)
            {
                if (phase == NOT_PHASED || phase == 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_SymbolIcon_Symbol(this.obj3, obj);
                }
            }
            private void Update_Label(global::System.String obj, int phase)
            {
                if (phase == NOT_PHASED || phase == 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj4, obj, null);
                }
            }
        }

        private class SplitViewPage_obj1_Bindings : 
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ISplitViewPage_Bindings
        {
            private global::AppUIBasics.ControlPages.SplitViewPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = -2;
            private const int DATA_CHANGED = -1;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.SplitView obj13;
            private global::Windows.UI.Xaml.Controls.ListView obj15;
            private global::Windows.UI.Xaml.Documents.Run obj17;
            private global::Windows.UI.Xaml.Documents.Run obj18;
            private global::Windows.UI.Xaml.Documents.Run obj19;
            private global::Windows.UI.Xaml.Documents.Run obj20;
            private global::Windows.UI.Xaml.Documents.Run obj21;

            private SplitViewPage_obj1_BindingsTracking bindingsTracking;

            public SplitViewPage_obj1_Bindings()
            {
                this.bindingsTracking = new SplitViewPage_obj1_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 13:
                        this.obj13 = (global::Windows.UI.Xaml.Controls.SplitView)target;
                            this.obj13.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.SplitView.IsPaneOpenProperty,
                                    (global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop) =>
                                    {
                                        // Update Two Way binding
                                        this.dataRoot.togglePaneButton.IsChecked = (global::System.Nullable<global::System.Boolean>)((global::Windows.UI.Xaml.Data.IValueConverter)global::Windows.UI.Xaml.Application.Current.Resources["nullableBooleanToBooleanConverter"]).ConvertBack(this.obj13.IsPaneOpen, typeof(global::System.Nullable<global::System.Boolean>), null, null);
                                    });
                        break;
                    case 15:
                        this.obj15 = (global::Windows.UI.Xaml.Controls.ListView)target;
                        break;
                    case 17:
                        this.obj17 = (global::Windows.UI.Xaml.Documents.Run)target;
                        break;
                    case 18:
                        this.obj18 = (global::Windows.UI.Xaml.Documents.Run)target;
                        break;
                    case 19:
                        this.obj19 = (global::Windows.UI.Xaml.Documents.Run)target;
                        break;
                    case 20:
                        this.obj20 = (global::Windows.UI.Xaml.Documents.Run)target;
                        break;
                    case 21:
                        this.obj21 = (global::Windows.UI.Xaml.Documents.Run)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 global::AppUIBasics.ControlPages.SplitViewPage data = args.NewValue as global::AppUIBasics.ControlPages.SplitViewPage;
                 if (args.NewValue != null && data == null)
                 {
                    throw new global::System.ArgumentException("Incorrect type passed into template. Based on the x:DataType global::AppUIBasics.ControlPages.SplitViewPage was expected.");
                 }
                 this.SetDataRoot(data);
                 this.Update();
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                return nextPhase;
            }

            public void ResetTemplate()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // ISplitViewPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // SplitViewPage_obj1_Bindings

            public void SetDataRoot(global::AppUIBasics.ControlPages.SplitViewPage newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.dataRoot = newDataRoot;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::AppUIBasics.ControlPages.SplitViewPage obj, int phase)
            {
                if (obj != null)
                {
                    if (phase == NOT_PHASED || phase == DATA_CHANGED || phase == 0)
                    {
                        this.Update_paneBackgroundCombobox(obj.paneBackgroundCombobox, phase);
                        this.Update_togglePaneButton(obj.togglePaneButton, phase);
                        this.Update_openPaneLengthSlider(obj.openPaneLengthSlider, phase);
                        this.Update_compactPaneLengthSlider(obj.compactPaneLengthSlider, phase);
                    }
                    if (phase == NOT_PHASED || phase == 0)
                    {
                        this.Update_NavLinks(obj.NavLinks, phase);
                    }
                    if (phase == NOT_PHASED || phase == DATA_CHANGED || phase == 0)
                    {
                        this.Update_splitView(obj.splitView, phase);
                    }
                }
            }
            private void Update_paneBackgroundCombobox(global::Windows.UI.Xaml.Controls.ComboBox obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_paneBackgroundCombobox(obj);
                if (obj != null)
                {
                    if (phase == NOT_PHASED || phase == DATA_CHANGED || phase == 0)
                    {
                        this.Update_paneBackgroundCombobox_SelectedValue(obj.SelectedValue, phase);
                    }
                }
            }
            private void Update_paneBackgroundCombobox_SelectedValue(global::System.Object obj, int phase)
            {
                if (phase == NOT_PHASED || phase == DATA_CHANGED || phase == 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_SplitView_PaneBackground(this.obj13, (global::Windows.UI.Xaml.Media.Brush)((global::Windows.UI.Xaml.Data.IValueConverter)global::Windows.UI.Xaml.Application.Current.Resources["stringToBrushConverter"]).Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                }
            }
            private void Update_togglePaneButton(global::Windows.UI.Xaml.Controls.Primitives.ToggleButton obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_togglePaneButton(obj);
                if (obj != null)
                {
                    if (phase == NOT_PHASED || phase == DATA_CHANGED || phase == 0)
                    {
                        this.Update_togglePaneButton_IsChecked(obj.IsChecked, phase);
                    }
                }
            }
            private void Update_togglePaneButton_IsChecked(global::System.Nullable<global::System.Boolean> obj, int phase)
            {
                if (phase == NOT_PHASED || phase == DATA_CHANGED || phase == 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_SplitView_IsPaneOpen(this.obj13, (global::System.Boolean)((global::Windows.UI.Xaml.Data.IValueConverter)global::Windows.UI.Xaml.Application.Current.Resources["nullableBooleanToBooleanConverter"]).Convert(obj, typeof(global::System.Boolean), null, null));
                }
            }
            private void Update_openPaneLengthSlider(global::Windows.UI.Xaml.Controls.Slider obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_openPaneLengthSlider(obj);
                if (obj != null)
                {
                    if (phase == NOT_PHASED || phase == DATA_CHANGED || phase == 0)
                    {
                        this.Update_openPaneLengthSlider_Value(obj.Value, phase);
                    }
                }
            }
            private void Update_openPaneLengthSlider_Value(global::System.Double obj, int phase)
            {
                if (phase == NOT_PHASED || phase == DATA_CHANGED || phase == 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_SplitView_OpenPaneLength(this.obj13, obj);
                    XamlBindingSetters.Set_Windows_UI_Xaml_Documents_Run_Text(this.obj19, (global::System.String)((global::Windows.UI.Xaml.Data.IValueConverter)global::Windows.UI.Xaml.Application.Current.Resources["valueToStringConverter"]).Convert(obj, typeof(global::System.String), null, null), null);
                }
            }
            private void Update_compactPaneLengthSlider(global::Windows.UI.Xaml.Controls.Slider obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_compactPaneLengthSlider(obj);
                if (obj != null)
                {
                    if (phase == NOT_PHASED || phase == DATA_CHANGED || phase == 0)
                    {
                        this.Update_compactPaneLengthSlider_Value(obj.Value, phase);
                    }
                }
            }
            private void Update_compactPaneLengthSlider_Value(global::System.Double obj, int phase)
            {
                if (phase == NOT_PHASED || phase == DATA_CHANGED || phase == 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_SplitView_CompactPaneLength(this.obj13, obj);
                    XamlBindingSetters.Set_Windows_UI_Xaml_Documents_Run_Text(this.obj20, (global::System.String)((global::Windows.UI.Xaml.Data.IValueConverter)global::Windows.UI.Xaml.Application.Current.Resources["valueToStringConverter"]).Convert(obj, typeof(global::System.String), null, null), null);
                }
            }
            private void Update_NavLinks(global::System.Collections.ObjectModel.ObservableCollection<global::AppUIBasics.ControlPages.NavLink> obj, int phase)
            {
                if (phase == NOT_PHASED || phase == 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj15, obj, null);
                }
            }
            private void Update_splitView(global::Windows.UI.Xaml.Controls.SplitView obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_splitView(obj);
                if (obj != null)
                {
                    if (phase == NOT_PHASED || phase == DATA_CHANGED || phase == 0)
                    {
                        this.Update_splitView_PaneBackground(obj.PaneBackground, phase);
                        this.Update_splitView_IsPaneOpen(obj.IsPaneOpen, phase);
                        this.Update_splitView_DisplayMode(obj.DisplayMode, phase);
                    }
                }
            }
            private void Update_splitView_PaneBackground(global::Windows.UI.Xaml.Media.Brush obj, int phase)
            {
                if (phase == NOT_PHASED || phase == DATA_CHANGED || phase == 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Documents_Run_Text(this.obj17, (global::System.String)((global::Windows.UI.Xaml.Data.IValueConverter)global::Windows.UI.Xaml.Application.Current.Resources["colorStringConverter"]).Convert(obj, typeof(global::System.String), null, null), null);
                }
            }
            private void Update_splitView_IsPaneOpen(global::System.Boolean obj, int phase)
            {
                if (phase == NOT_PHASED || phase == DATA_CHANGED || phase == 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Documents_Run_Text(this.obj18, (global::System.String)((global::Windows.UI.Xaml.Data.IValueConverter)global::Windows.UI.Xaml.Application.Current.Resources["valueToStringConverter"]).Convert(obj, typeof(global::System.String), null, null), null);
                }
            }
            private void Update_splitView_DisplayMode(global::Windows.UI.Xaml.Controls.SplitViewDisplayMode obj, int phase)
            {
                if (phase == NOT_PHASED || phase == DATA_CHANGED || phase == 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Documents_Run_Text(this.obj21, (global::System.String)((global::Windows.UI.Xaml.Data.IValueConverter)global::Windows.UI.Xaml.Application.Current.Resources["valueToStringConverter"]).Convert(obj, typeof(global::System.String), null, null), null);
                }
            }

            private class SplitViewPage_obj1_BindingsTracking
            {
                global::System.WeakReference<SplitViewPage_obj1_Bindings> WeakRefToBindingObj; 

                public SplitViewPage_obj1_BindingsTracking(SplitViewPage_obj1_Bindings obj)
                {
                    WeakRefToBindingObj = new global::System.WeakReference<SplitViewPage_obj1_Bindings>(obj);
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_paneBackgroundCombobox(null);
                    UpdateChildListeners_togglePaneButton(null);
                    UpdateChildListeners_openPaneLengthSlider(null);
                    UpdateChildListeners_compactPaneLengthSlider(null);
                    UpdateChildListeners_splitView(null);
                }

                public void DependencyPropertyChanged_paneBackgroundCombobox_SelectedValue(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    SplitViewPage_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        global::Windows.UI.Xaml.Controls.ComboBox obj = sender as global::Windows.UI.Xaml.Controls.ComboBox;
        if (obj != null)
        {
            bindings.Update_paneBackgroundCombobox_SelectedValue(obj.SelectedValue, DATA_CHANGED);
        }
                    }
                    else
                    {
                        ReleaseAllListeners();
                    }
                }
                private global::Windows.UI.Xaml.Controls.ComboBox cache_paneBackgroundCombobox = null;
                private long tokenDPC_paneBackgroundCombobox_SelectedValue = 0;
                public void UpdateChildListeners_paneBackgroundCombobox(global::Windows.UI.Xaml.Controls.ComboBox obj)
                {
                    if (obj != cache_paneBackgroundCombobox)
                    {
                        if (cache_paneBackgroundCombobox != null)
                        {
                            cache_paneBackgroundCombobox.UnregisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.ComboBox.SelectedValueProperty, tokenDPC_paneBackgroundCombobox_SelectedValue);
                            cache_paneBackgroundCombobox = null;
                        }
                        if (obj != null)
                        {
                            tokenDPC_paneBackgroundCombobox_SelectedValue = obj.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.ComboBox.SelectedValueProperty, DependencyPropertyChanged_paneBackgroundCombobox_SelectedValue);
                        }
                    }
                }
                public void DependencyPropertyChanged_togglePaneButton_IsChecked(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    SplitViewPage_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        global::Windows.UI.Xaml.Controls.Primitives.ToggleButton obj = sender as global::Windows.UI.Xaml.Controls.Primitives.ToggleButton;
        if (obj != null)
        {
            bindings.Update_togglePaneButton_IsChecked(obj.IsChecked, DATA_CHANGED);
        }
                    }
                    else
                    {
                        ReleaseAllListeners();
                    }
                }
                private global::Windows.UI.Xaml.Controls.Primitives.ToggleButton cache_togglePaneButton = null;
                private long tokenDPC_togglePaneButton_IsChecked = 0;
                public void UpdateChildListeners_togglePaneButton(global::Windows.UI.Xaml.Controls.Primitives.ToggleButton obj)
                {
                    if (obj != cache_togglePaneButton)
                    {
                        if (cache_togglePaneButton != null)
                        {
                            cache_togglePaneButton.UnregisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, tokenDPC_togglePaneButton_IsChecked);
                            cache_togglePaneButton = null;
                        }
                        if (obj != null)
                        {
                            tokenDPC_togglePaneButton_IsChecked = obj.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, DependencyPropertyChanged_togglePaneButton_IsChecked);
                        }
                    }
                }
                public void DependencyPropertyChanged_openPaneLengthSlider_Value(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    SplitViewPage_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        global::Windows.UI.Xaml.Controls.Slider obj = sender as global::Windows.UI.Xaml.Controls.Slider;
        if (obj != null)
        {
            bindings.Update_openPaneLengthSlider_Value(obj.Value, DATA_CHANGED);
        }
                    }
                    else
                    {
                        ReleaseAllListeners();
                    }
                }
                private global::Windows.UI.Xaml.Controls.Slider cache_openPaneLengthSlider = null;
                private long tokenDPC_openPaneLengthSlider_Value = 0;
                public void UpdateChildListeners_openPaneLengthSlider(global::Windows.UI.Xaml.Controls.Slider obj)
                {
                    if (obj != cache_openPaneLengthSlider)
                    {
                        if (cache_openPaneLengthSlider != null)
                        {
                            cache_openPaneLengthSlider.UnregisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Slider.ValueProperty, tokenDPC_openPaneLengthSlider_Value);
                            cache_openPaneLengthSlider = null;
                        }
                        if (obj != null)
                        {
                            tokenDPC_openPaneLengthSlider_Value = obj.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Slider.ValueProperty, DependencyPropertyChanged_openPaneLengthSlider_Value);
                        }
                    }
                }
                public void DependencyPropertyChanged_compactPaneLengthSlider_Value(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    SplitViewPage_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        global::Windows.UI.Xaml.Controls.Slider obj = sender as global::Windows.UI.Xaml.Controls.Slider;
        if (obj != null)
        {
            bindings.Update_compactPaneLengthSlider_Value(obj.Value, DATA_CHANGED);
        }
                    }
                    else
                    {
                        ReleaseAllListeners();
                    }
                }
                private global::Windows.UI.Xaml.Controls.Slider cache_compactPaneLengthSlider = null;
                private long tokenDPC_compactPaneLengthSlider_Value = 0;
                public void UpdateChildListeners_compactPaneLengthSlider(global::Windows.UI.Xaml.Controls.Slider obj)
                {
                    if (obj != cache_compactPaneLengthSlider)
                    {
                        if (cache_compactPaneLengthSlider != null)
                        {
                            cache_compactPaneLengthSlider.UnregisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Slider.ValueProperty, tokenDPC_compactPaneLengthSlider_Value);
                            cache_compactPaneLengthSlider = null;
                        }
                        if (obj != null)
                        {
                            tokenDPC_compactPaneLengthSlider_Value = obj.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Slider.ValueProperty, DependencyPropertyChanged_compactPaneLengthSlider_Value);
                        }
                    }
                }
                public void DependencyPropertyChanged_splitView_PaneBackground(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    SplitViewPage_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        global::Windows.UI.Xaml.Controls.SplitView obj = sender as global::Windows.UI.Xaml.Controls.SplitView;
        if (obj != null)
        {
            bindings.Update_splitView_PaneBackground(obj.PaneBackground, DATA_CHANGED);
        }
                    }
                    else
                    {
                        ReleaseAllListeners();
                    }
                }
                public void DependencyPropertyChanged_splitView_IsPaneOpen(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    SplitViewPage_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        global::Windows.UI.Xaml.Controls.SplitView obj = sender as global::Windows.UI.Xaml.Controls.SplitView;
        if (obj != null)
        {
            bindings.Update_splitView_IsPaneOpen(obj.IsPaneOpen, DATA_CHANGED);
        }
                    }
                    else
                    {
                        ReleaseAllListeners();
                    }
                }
                public void DependencyPropertyChanged_splitView_DisplayMode(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    SplitViewPage_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        global::Windows.UI.Xaml.Controls.SplitView obj = sender as global::Windows.UI.Xaml.Controls.SplitView;
        if (obj != null)
        {
            bindings.Update_splitView_DisplayMode(obj.DisplayMode, DATA_CHANGED);
        }
                    }
                    else
                    {
                        ReleaseAllListeners();
                    }
                }
                private global::Windows.UI.Xaml.Controls.SplitView cache_splitView = null;
                private long tokenDPC_splitView_PaneBackground = 0;
                private long tokenDPC_splitView_IsPaneOpen = 0;
                private long tokenDPC_splitView_DisplayMode = 0;
                public void UpdateChildListeners_splitView(global::Windows.UI.Xaml.Controls.SplitView obj)
                {
                    if (obj != cache_splitView)
                    {
                        if (cache_splitView != null)
                        {
                            cache_splitView.UnregisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.SplitView.PaneBackgroundProperty, tokenDPC_splitView_PaneBackground);
                            cache_splitView.UnregisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.SplitView.IsPaneOpenProperty, tokenDPC_splitView_IsPaneOpen);
                            cache_splitView.UnregisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.SplitView.DisplayModeProperty, tokenDPC_splitView_DisplayMode);
                            cache_splitView = null;
                        }
                        if (obj != null)
                        {
                            tokenDPC_splitView_PaneBackground = obj.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.SplitView.PaneBackgroundProperty, DependencyPropertyChanged_splitView_PaneBackground);
                            tokenDPC_splitView_IsPaneOpen = obj.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.SplitView.IsPaneOpenProperty, DependencyPropertyChanged_splitView_IsPaneOpen);
                            tokenDPC_splitView_DisplayMode = obj.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.SplitView.DisplayModeProperty, DependencyPropertyChanged_splitView_DisplayMode);
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 5:
                {
                    this.Example1 = (global::AppUIBasics.ControlPages.ControlExample)(target);
                }
                break;
            case 6:
                {
                    this.ExampleAccessories = (global::AppUIBasics.ControlPages.ControlExample)(target);
                }
                break;
            case 7:
                {
                    this.togglePaneButton = (global::Windows.UI.Xaml.Controls.Primitives.ToggleButton)(target);
                }
                break;
            case 8:
                {
                    global::Windows.UI.Xaml.Controls.ToggleSwitch element8 = (global::Windows.UI.Xaml.Controls.ToggleSwitch)(target);
                    #line 90 "..\..\..\ControlPages\SplitViewPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.ToggleSwitch)element8).Toggled += this.PanePlacement_Toggled;
                    #line default
                }
                break;
            case 9:
                {
                    this.displayModeCombobox = (global::Windows.UI.Xaml.Controls.ComboBox)(target);
                    #line 91 "..\..\..\ControlPages\SplitViewPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.ComboBox)this.displayModeCombobox).SelectionChanged += this.displayModeCombobox_SelectionChanged;
                    #line default
                }
                break;
            case 10:
                {
                    this.paneBackgroundCombobox = (global::Windows.UI.Xaml.Controls.ComboBox)(target);
                }
                break;
            case 11:
                {
                    this.openPaneLengthSlider = (global::Windows.UI.Xaml.Controls.Slider)(target);
                }
                break;
            case 12:
                {
                    this.compactPaneLengthSlider = (global::Windows.UI.Xaml.Controls.Slider)(target);
                }
                break;
            case 13:
                {
                    this.splitView = (global::Windows.UI.Xaml.Controls.SplitView)(target);
                }
                break;
            case 14:
                {
                    this.PaneHeader = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 15:
                {
                    this.NavLinksList = (global::Windows.UI.Xaml.Controls.ListView)(target);
                    #line 33 "..\..\..\ControlPages\SplitViewPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.ListView)this.NavLinksList).ItemClick += this.NavLinksList_ItemClick;
                    #line default
                }
                break;
            case 16:
                {
                    this.content = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 22:
                {
                    this.WideLayout = (global::Windows.UI.Xaml.VisualState)(target);
                }
                break;
            case 23:
                {
                    this.NarrowLayout = (global::Windows.UI.Xaml.VisualState)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1:
                {
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    SplitViewPage_obj1_Bindings bindings = new SplitViewPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);                
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                }
                break;
            case 2:
                {
                    global::Windows.UI.Xaml.Controls.StackPanel element2 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                    SplitViewPage_obj2_Bindings bindings = new SplitViewPage_obj2_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot((global::AppUIBasics.ControlPages.NavLink) element2.DataContext);                
                      element2.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element2, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

