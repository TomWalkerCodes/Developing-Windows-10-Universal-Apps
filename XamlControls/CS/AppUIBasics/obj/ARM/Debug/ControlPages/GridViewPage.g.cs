#pragma checksum "C:\Developing Windows 10 Universal Apps\Demos\xaml_xamluibasics\CS\AppUIBasics\ControlPages\GridViewPage.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "7DAC2DE327B0BB63F719F74C2264D513"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AppUIBasics.ControlPages
{
    partial class GridViewPage : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        internal class XamlBindingSetters
        {
            static bool shouldUpdate(int expectedPhase, int currentPhase)
            {
                return (currentPhase == -1 || currentPhase == expectedPhase);
            }
                  
            public static void Set_Windows_UI_Xaml_Documents_Run_Text(global::Windows.UI.Xaml.Documents.Run obj, global::System.String value, string targetNullValue)
                {
                    if (value == null && targetNullValue != null)
                    {
                            value = targetNullValue;
                    }
                    obj.Text = value;
                }
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
                {
                    if (value == null && targetNullValue != null)
                    {
                        value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                    }
                    obj.ItemsSource = value;
                }
            public static void Set_Windows_UI_Xaml_Controls_ListViewBase_CanDragItems(global::Windows.UI.Xaml.Controls.ListViewBase obj, global::System.Boolean value)
                {
                    obj.CanDragItems = value;
                }
            public static void Set_Windows_UI_Xaml_Controls_ListViewBase_IsItemClickEnabled(global::Windows.UI.Xaml.Controls.ListViewBase obj, global::System.Boolean value)
                {
                    obj.IsItemClickEnabled = value;
                }
            public static void Set_Windows_UI_Xaml_Controls_ListViewBase_IsSwipeEnabled(global::Windows.UI.Xaml.Controls.ListViewBase obj, global::System.Boolean value)
                {
                    obj.IsSwipeEnabled = value;
                }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
                {
                    if (value == null && targetNullValue != null)
                    {
                            value = targetNullValue;
                    }
                    obj.Text = value;
                }
            public static void Set_Windows_UI_Xaml_Controls_Image_Source(global::Windows.UI.Xaml.Controls.Image obj, global::Windows.UI.Xaml.Media.ImageSource value, string targetNullValue)
                {
                    if (value == null && targetNullValue != null)
                    {
                        value = (global::Windows.UI.Xaml.Media.ImageSource) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.ImageSource), targetNullValue);
                    }
                    obj.Source = value;
                }
        };

        private class GridViewPage_obj2_Bindings : 
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IGridViewPage_Bindings
        {
            private global::AppUIBasics.Data.ControlInfoDataGroup dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = -2;
            private const int DATA_CHANGED = -1;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.TextBlock obj3;

            public GridViewPage_obj2_Bindings()
            {
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 3:
                        this.obj3 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 global::AppUIBasics.Data.ControlInfoDataGroup data = args.NewValue as global::AppUIBasics.Data.ControlInfoDataGroup;
                 if (args.NewValue != null && data == null)
                 {
                    throw new global::System.ArgumentException("Incorrect type passed into template. Based on the x:DataType global::AppUIBasics.Data.ControlInfoDataGroup was expected.");
                 }
                 this.SetDataRoot(data);
                 this.Update();
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                return nextPhase;
            }

            public void ResetTemplate()
            {
            }

            // IGridViewPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            // GridViewPage_obj2_Bindings

            public void SetDataRoot(global::AppUIBasics.Data.ControlInfoDataGroup newDataRoot)
            {
                this.dataRoot = newDataRoot;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::AppUIBasics.Data.ControlInfoDataGroup obj, int phase)
            {
                if (obj != null)
                {
                    if (phase == NOT_PHASED || phase == 0)
                    {
                        this.Update_Title(obj.Title, phase);
                    }
                }
            }
            private void Update_Title(global::System.String obj, int phase)
            {
                if (phase == NOT_PHASED || phase == 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj3, obj, null);
                }
            }
        }

        private class GridViewPage_obj4_Bindings : 
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IGridViewPage_Bindings
        {
            private global::AppUIBasics.Data.ControlInfoDataGroup dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = -2;
            private const int DATA_CHANGED = -1;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.Image obj5;
            private global::Windows.UI.Xaml.Controls.TextBlock obj6;
            private global::Windows.UI.Xaml.Controls.TextBlock obj7;
            private global::Windows.UI.Xaml.Controls.TextBlock obj8;

            public GridViewPage_obj4_Bindings()
            {
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 5:
                        this.obj5 = (global::Windows.UI.Xaml.Controls.Image)target;
                        break;
                    case 6:
                        this.obj6 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 7:
                        this.obj7 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 8:
                        this.obj8 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 global::AppUIBasics.Data.ControlInfoDataGroup data = args.NewValue as global::AppUIBasics.Data.ControlInfoDataGroup;
                 if (args.NewValue != null && data == null)
                 {
                    throw new global::System.ArgumentException("Incorrect type passed into template. Based on the x:DataType global::AppUIBasics.Data.ControlInfoDataGroup was expected.");
                 }
                 this.SetDataRoot(data);
                 this.Update();
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                return nextPhase;
            }

            public void ResetTemplate()
            {
            }

            // IGridViewPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            // GridViewPage_obj4_Bindings

            public void SetDataRoot(global::AppUIBasics.Data.ControlInfoDataGroup newDataRoot)
            {
                this.dataRoot = newDataRoot;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::AppUIBasics.Data.ControlInfoDataGroup obj, int phase)
            {
                if (obj != null)
                {
                    if (phase == NOT_PHASED || phase == 0)
                    {
                        this.Update_ImagePath(obj.ImagePath, phase);
                        this.Update_Title(obj.Title, phase);
                        this.Update_Subtitle(obj.Subtitle, phase);
                        this.Update_Description(obj.Description, phase);
                    }
                }
            }
            private void Update_ImagePath(global::System.String obj, int phase)
            {
                if (phase == NOT_PHASED || phase == 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Image_Source(this.obj5, (global::Windows.UI.Xaml.Media.ImageSource) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.ImageSource), obj), null);
                }
            }
            private void Update_Title(global::System.String obj, int phase)
            {
                if (phase == NOT_PHASED || phase == 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj6, obj, null);
                }
            }
            private void Update_Subtitle(global::System.String obj, int phase)
            {
                if (phase == NOT_PHASED || phase == 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj7, obj, null);
                }
            }
            private void Update_Description(global::System.String obj, int phase)
            {
                if (phase == NOT_PHASED || phase == 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj8, obj, null);
                }
            }
        }

        private class GridViewPage_obj9_Bindings : 
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IGridViewPage_Bindings
        {
            private global::AppUIBasics.Data.ControlInfoDataGroup dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = -2;
            private const int DATA_CHANGED = -1;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.Image obj10;
            private global::Windows.UI.Xaml.Controls.TextBlock obj11;
            private global::Windows.UI.Xaml.Controls.TextBlock obj12;

            public GridViewPage_obj9_Bindings()
            {
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 10:
                        this.obj10 = (global::Windows.UI.Xaml.Controls.Image)target;
                        break;
                    case 11:
                        this.obj11 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 12:
                        this.obj12 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 global::AppUIBasics.Data.ControlInfoDataGroup data = args.NewValue as global::AppUIBasics.Data.ControlInfoDataGroup;
                 if (args.NewValue != null && data == null)
                 {
                    throw new global::System.ArgumentException("Incorrect type passed into template. Based on the x:DataType global::AppUIBasics.Data.ControlInfoDataGroup was expected.");
                 }
                 this.SetDataRoot(data);
                 this.Update();
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                return nextPhase;
            }

            public void ResetTemplate()
            {
            }

            // IGridViewPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            // GridViewPage_obj9_Bindings

            public void SetDataRoot(global::AppUIBasics.Data.ControlInfoDataGroup newDataRoot)
            {
                this.dataRoot = newDataRoot;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::AppUIBasics.Data.ControlInfoDataGroup obj, int phase)
            {
                if (obj != null)
                {
                    if (phase == NOT_PHASED || phase == 0)
                    {
                        this.Update_ImagePath(obj.ImagePath, phase);
                        this.Update_Title(obj.Title, phase);
                        this.Update_Subtitle(obj.Subtitle, phase);
                    }
                }
            }
            private void Update_ImagePath(global::System.String obj, int phase)
            {
                if (phase == NOT_PHASED || phase == 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Image_Source(this.obj10, (global::Windows.UI.Xaml.Media.ImageSource) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.ImageSource), obj), null);
                }
            }
            private void Update_Title(global::System.String obj, int phase)
            {
                if (phase == NOT_PHASED || phase == 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj11, obj, null);
                }
            }
            private void Update_Subtitle(global::System.String obj, int phase)
            {
                if (phase == NOT_PHASED || phase == 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj12, obj, null);
                }
            }
        }

        private class GridViewPage_obj13_Bindings : 
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IGridViewPage_Bindings
        {
            private global::AppUIBasics.Data.ControlInfoDataGroup dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = -2;
            private const int DATA_CHANGED = -1;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.TextBlock obj14;
            private global::Windows.UI.Xaml.Controls.Image obj15;

            public GridViewPage_obj13_Bindings()
            {
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 14:
                        this.obj14 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 15:
                        this.obj15 = (global::Windows.UI.Xaml.Controls.Image)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 global::AppUIBasics.Data.ControlInfoDataGroup data = args.NewValue as global::AppUIBasics.Data.ControlInfoDataGroup;
                 if (args.NewValue != null && data == null)
                 {
                    throw new global::System.ArgumentException("Incorrect type passed into template. Based on the x:DataType global::AppUIBasics.Data.ControlInfoDataGroup was expected.");
                 }
                 this.SetDataRoot(data);
                 this.Update();
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                return nextPhase;
            }

            public void ResetTemplate()
            {
            }

            // IGridViewPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            // GridViewPage_obj13_Bindings

            public void SetDataRoot(global::AppUIBasics.Data.ControlInfoDataGroup newDataRoot)
            {
                this.dataRoot = newDataRoot;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::AppUIBasics.Data.ControlInfoDataGroup obj, int phase)
            {
                if (obj != null)
                {
                    if (phase == NOT_PHASED || phase == 0)
                    {
                        this.Update_Title(obj.Title, phase);
                        this.Update_ImagePath(obj.ImagePath, phase);
                    }
                }
            }
            private void Update_Title(global::System.String obj, int phase)
            {
                if (phase == NOT_PHASED || phase == 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj14, obj, null);
                }
            }
            private void Update_ImagePath(global::System.String obj, int phase)
            {
                if (phase == NOT_PHASED || phase == 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Image_Source(this.obj15, (global::Windows.UI.Xaml.Media.ImageSource) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.ImageSource), obj), null);
                }
            }
        }

        private class GridViewPage_obj1_Bindings : 
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IGridViewPage_Bindings
        {
            private global::AppUIBasics.ControlPages.GridViewPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = -2;
            private const int DATA_CHANGED = -1;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Documents.Run obj30;
            private global::Windows.UI.Xaml.Documents.Run obj31;
            private global::Windows.UI.Xaml.Documents.Run obj32;
            private global::Windows.UI.Xaml.Documents.Run obj33;
            private global::Windows.UI.Xaml.Controls.GridView obj35;

            private GridViewPage_obj1_BindingsTracking bindingsTracking;

            public GridViewPage_obj1_Bindings()
            {
                this.bindingsTracking = new GridViewPage_obj1_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 30:
                        this.obj30 = (global::Windows.UI.Xaml.Documents.Run)target;
                        break;
                    case 31:
                        this.obj31 = (global::Windows.UI.Xaml.Documents.Run)target;
                        break;
                    case 32:
                        this.obj32 = (global::Windows.UI.Xaml.Documents.Run)target;
                        break;
                    case 33:
                        this.obj33 = (global::Windows.UI.Xaml.Documents.Run)target;
                        break;
                    case 35:
                        this.obj35 = (global::Windows.UI.Xaml.Controls.GridView)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 global::AppUIBasics.ControlPages.GridViewPage data = args.NewValue as global::AppUIBasics.ControlPages.GridViewPage;
                 if (args.NewValue != null && data == null)
                 {
                    throw new global::System.ArgumentException("Incorrect type passed into template. Based on the x:DataType global::AppUIBasics.ControlPages.GridViewPage was expected.");
                 }
                 this.SetDataRoot(data);
                 this.Update();
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                return nextPhase;
            }

            public void ResetTemplate()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // IGridViewPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // GridViewPage_obj1_Bindings

            public void SetDataRoot(global::AppUIBasics.ControlPages.GridViewPage newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.dataRoot = newDataRoot;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::AppUIBasics.ControlPages.GridViewPage obj, int phase)
            {
                if (obj != null)
                {
                    if (phase == NOT_PHASED || phase == DATA_CHANGED || phase == 0)
                    {
                        this.Update_Control1(obj.Control1, phase);
                    }
                    if (phase == NOT_PHASED || phase == 0)
                    {
                        this.Update_Groups(obj.Groups, phase);
                    }
                    if (phase == NOT_PHASED || phase == DATA_CHANGED || phase == 0)
                    {
                        this.Update_DragCheckBox(obj.DragCheckBox, phase);
                        this.Update_ItemClickCheckBox(obj.ItemClickCheckBox, phase);
                        this.Update_SwipeCheckBox(obj.SwipeCheckBox, phase);
                    }
                }
            }
            private void Update_Control1(global::Windows.UI.Xaml.Controls.GridView obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_Control1(obj);
                if (obj != null)
                {
                    if (phase == NOT_PHASED || phase == DATA_CHANGED || phase == 0)
                    {
                        this.Update_Control1_SelectionMode(obj.SelectionMode, phase);
                        this.Update_Control1_CanDragItems(obj.CanDragItems, phase);
                        this.Update_Control1_IsSwipeEnabled(obj.IsSwipeEnabled, phase);
                        this.Update_Control1_IsItemClickEnabled(obj.IsItemClickEnabled, phase);
                    }
                }
            }
            private void Update_Control1_SelectionMode(global::Windows.UI.Xaml.Controls.ListViewSelectionMode obj, int phase)
            {
                if (phase == NOT_PHASED || phase == DATA_CHANGED || phase == 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Documents_Run_Text(this.obj30, (global::System.String)((global::Windows.UI.Xaml.Data.IValueConverter)global::Windows.UI.Xaml.Application.Current.Resources["valueToStringConverter"]).Convert(obj, typeof(global::System.String), null, null), null);
                }
            }
            private void Update_Control1_CanDragItems(global::System.Boolean obj, int phase)
            {
                if (phase == NOT_PHASED || phase == DATA_CHANGED || phase == 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Documents_Run_Text(this.obj31, (global::System.String)((global::Windows.UI.Xaml.Data.IValueConverter)global::Windows.UI.Xaml.Application.Current.Resources["valueToStringConverter"]).Convert(obj, typeof(global::System.String), null, null), null);
                }
            }
            private void Update_Control1_IsSwipeEnabled(global::System.Boolean obj, int phase)
            {
                if (phase == NOT_PHASED || phase == DATA_CHANGED || phase == 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Documents_Run_Text(this.obj32, (global::System.String)((global::Windows.UI.Xaml.Data.IValueConverter)global::Windows.UI.Xaml.Application.Current.Resources["valueToStringConverter"]).Convert(obj, typeof(global::System.String), null, null), null);
                }
            }
            private void Update_Control1_IsItemClickEnabled(global::System.Boolean obj, int phase)
            {
                if (phase == NOT_PHASED || phase == DATA_CHANGED || phase == 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Documents_Run_Text(this.obj33, (global::System.String)((global::Windows.UI.Xaml.Data.IValueConverter)global::Windows.UI.Xaml.Application.Current.Resources["valueToStringConverter"]).Convert(obj, typeof(global::System.String), null, null), null);
                }
            }
            private void Update_Groups(global::System.Collections.Generic.IEnumerable<global::AppUIBasics.Data.ControlInfoDataGroup> obj, int phase)
            {
                if (phase == NOT_PHASED || phase == 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj35, obj, null);
                }
            }
            private void Update_DragCheckBox(global::Windows.UI.Xaml.Controls.CheckBox obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_DragCheckBox(obj);
                if (obj != null)
                {
                    if (phase == NOT_PHASED || phase == DATA_CHANGED || phase == 0)
                    {
                        this.Update_DragCheckBox_IsChecked(obj.IsChecked, phase);
                    }
                }
            }
            private void Update_DragCheckBox_IsChecked(global::System.Nullable<global::System.Boolean> obj, int phase)
            {
                if (obj != null)
                {
                    if (phase == NOT_PHASED || phase == DATA_CHANGED || phase == 0)
                    {
                        this.Update_DragCheckBox_IsChecked_Value(obj.Value, phase);
                    }
                }
            }
            private void Update_DragCheckBox_IsChecked_Value(global::System.Boolean obj, int phase)
            {
                if (phase == NOT_PHASED || phase == DATA_CHANGED || phase == 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ListViewBase_CanDragItems(this.obj35, obj);
                }
            }
            private void Update_ItemClickCheckBox(global::Windows.UI.Xaml.Controls.CheckBox obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ItemClickCheckBox(obj);
                if (obj != null)
                {
                    if (phase == NOT_PHASED || phase == DATA_CHANGED || phase == 0)
                    {
                        this.Update_ItemClickCheckBox_IsChecked(obj.IsChecked, phase);
                    }
                }
            }
            private void Update_ItemClickCheckBox_IsChecked(global::System.Nullable<global::System.Boolean> obj, int phase)
            {
                if (obj != null)
                {
                    if (phase == NOT_PHASED || phase == DATA_CHANGED || phase == 0)
                    {
                        this.Update_ItemClickCheckBox_IsChecked_Value(obj.Value, phase);
                    }
                }
            }
            private void Update_ItemClickCheckBox_IsChecked_Value(global::System.Boolean obj, int phase)
            {
                if (phase == NOT_PHASED || phase == DATA_CHANGED || phase == 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ListViewBase_IsItemClickEnabled(this.obj35, obj);
                }
            }
            private void Update_SwipeCheckBox(global::Windows.UI.Xaml.Controls.CheckBox obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_SwipeCheckBox(obj);
                if (obj != null)
                {
                    if (phase == NOT_PHASED || phase == DATA_CHANGED || phase == 0)
                    {
                        this.Update_SwipeCheckBox_IsChecked(obj.IsChecked, phase);
                    }
                }
            }
            private void Update_SwipeCheckBox_IsChecked(global::System.Nullable<global::System.Boolean> obj, int phase)
            {
                if (obj != null)
                {
                    if (phase == NOT_PHASED || phase == DATA_CHANGED || phase == 0)
                    {
                        this.Update_SwipeCheckBox_IsChecked_Value(obj.Value, phase);
                    }
                }
            }
            private void Update_SwipeCheckBox_IsChecked_Value(global::System.Boolean obj, int phase)
            {
                if (phase == NOT_PHASED || phase == DATA_CHANGED || phase == 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ListViewBase_IsSwipeEnabled(this.obj35, obj);
                }
            }

            private class GridViewPage_obj1_BindingsTracking
            {
                global::System.WeakReference<GridViewPage_obj1_Bindings> WeakRefToBindingObj; 

                public GridViewPage_obj1_BindingsTracking(GridViewPage_obj1_Bindings obj)
                {
                    WeakRefToBindingObj = new global::System.WeakReference<GridViewPage_obj1_Bindings>(obj);
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_Control1(null);
                    UpdateChildListeners_DragCheckBox(null);
                    UpdateChildListeners_ItemClickCheckBox(null);
                    UpdateChildListeners_SwipeCheckBox(null);
                }

                public void DependencyPropertyChanged_Control1_SelectionMode(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    GridViewPage_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        global::Windows.UI.Xaml.Controls.GridView obj = sender as global::Windows.UI.Xaml.Controls.GridView;
        if (obj != null)
        {
            bindings.Update_Control1_SelectionMode(obj.SelectionMode, DATA_CHANGED);
        }
                    }
                    else
                    {
                        ReleaseAllListeners();
                    }
                }
                public void DependencyPropertyChanged_Control1_CanDragItems(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    GridViewPage_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        global::Windows.UI.Xaml.Controls.GridView obj = sender as global::Windows.UI.Xaml.Controls.GridView;
        if (obj != null)
        {
            bindings.Update_Control1_CanDragItems(obj.CanDragItems, DATA_CHANGED);
        }
                    }
                    else
                    {
                        ReleaseAllListeners();
                    }
                }
                public void DependencyPropertyChanged_Control1_IsSwipeEnabled(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    GridViewPage_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        global::Windows.UI.Xaml.Controls.GridView obj = sender as global::Windows.UI.Xaml.Controls.GridView;
        if (obj != null)
        {
            bindings.Update_Control1_IsSwipeEnabled(obj.IsSwipeEnabled, DATA_CHANGED);
        }
                    }
                    else
                    {
                        ReleaseAllListeners();
                    }
                }
                public void DependencyPropertyChanged_Control1_IsItemClickEnabled(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    GridViewPage_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        global::Windows.UI.Xaml.Controls.GridView obj = sender as global::Windows.UI.Xaml.Controls.GridView;
        if (obj != null)
        {
            bindings.Update_Control1_IsItemClickEnabled(obj.IsItemClickEnabled, DATA_CHANGED);
        }
                    }
                    else
                    {
                        ReleaseAllListeners();
                    }
                }
                private global::Windows.UI.Xaml.Controls.GridView cache_Control1 = null;
                private long tokenDPC_Control1_SelectionMode = 0;
                private long tokenDPC_Control1_CanDragItems = 0;
                private long tokenDPC_Control1_IsSwipeEnabled = 0;
                private long tokenDPC_Control1_IsItemClickEnabled = 0;
                public void UpdateChildListeners_Control1(global::Windows.UI.Xaml.Controls.GridView obj)
                {
                    if (obj != cache_Control1)
                    {
                        if (cache_Control1 != null)
                        {
                            cache_Control1.UnregisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.GridView.SelectionModeProperty, tokenDPC_Control1_SelectionMode);
                            cache_Control1.UnregisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.GridView.CanDragItemsProperty, tokenDPC_Control1_CanDragItems);
                            cache_Control1.UnregisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.GridView.IsSwipeEnabledProperty, tokenDPC_Control1_IsSwipeEnabled);
                            cache_Control1.UnregisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.GridView.IsItemClickEnabledProperty, tokenDPC_Control1_IsItemClickEnabled);
                            cache_Control1 = null;
                        }
                        if (obj != null)
                        {
                            tokenDPC_Control1_SelectionMode = obj.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.GridView.SelectionModeProperty, DependencyPropertyChanged_Control1_SelectionMode);
                            tokenDPC_Control1_CanDragItems = obj.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.GridView.CanDragItemsProperty, DependencyPropertyChanged_Control1_CanDragItems);
                            tokenDPC_Control1_IsSwipeEnabled = obj.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.GridView.IsSwipeEnabledProperty, DependencyPropertyChanged_Control1_IsSwipeEnabled);
                            tokenDPC_Control1_IsItemClickEnabled = obj.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.GridView.IsItemClickEnabledProperty, DependencyPropertyChanged_Control1_IsItemClickEnabled);
                        }
                    }
                }
                public void DependencyPropertyChanged_DragCheckBox_IsChecked(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    GridViewPage_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        global::Windows.UI.Xaml.Controls.CheckBox obj = sender as global::Windows.UI.Xaml.Controls.CheckBox;
        if (obj != null)
        {
            bindings.Update_DragCheckBox_IsChecked(obj.IsChecked, DATA_CHANGED);
        }
                    }
                    else
                    {
                        ReleaseAllListeners();
                    }
                }
                private global::Windows.UI.Xaml.Controls.CheckBox cache_DragCheckBox = null;
                private long tokenDPC_DragCheckBox_IsChecked = 0;
                public void UpdateChildListeners_DragCheckBox(global::Windows.UI.Xaml.Controls.CheckBox obj)
                {
                    if (obj != cache_DragCheckBox)
                    {
                        if (cache_DragCheckBox != null)
                        {
                            cache_DragCheckBox.UnregisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.CheckBox.IsCheckedProperty, tokenDPC_DragCheckBox_IsChecked);
                            cache_DragCheckBox = null;
                        }
                        if (obj != null)
                        {
                            tokenDPC_DragCheckBox_IsChecked = obj.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.CheckBox.IsCheckedProperty, DependencyPropertyChanged_DragCheckBox_IsChecked);
                        }
                    }
                }
                public void DependencyPropertyChanged_ItemClickCheckBox_IsChecked(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    GridViewPage_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        global::Windows.UI.Xaml.Controls.CheckBox obj = sender as global::Windows.UI.Xaml.Controls.CheckBox;
        if (obj != null)
        {
            bindings.Update_ItemClickCheckBox_IsChecked(obj.IsChecked, DATA_CHANGED);
        }
                    }
                    else
                    {
                        ReleaseAllListeners();
                    }
                }
                private global::Windows.UI.Xaml.Controls.CheckBox cache_ItemClickCheckBox = null;
                private long tokenDPC_ItemClickCheckBox_IsChecked = 0;
                public void UpdateChildListeners_ItemClickCheckBox(global::Windows.UI.Xaml.Controls.CheckBox obj)
                {
                    if (obj != cache_ItemClickCheckBox)
                    {
                        if (cache_ItemClickCheckBox != null)
                        {
                            cache_ItemClickCheckBox.UnregisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.CheckBox.IsCheckedProperty, tokenDPC_ItemClickCheckBox_IsChecked);
                            cache_ItemClickCheckBox = null;
                        }
                        if (obj != null)
                        {
                            tokenDPC_ItemClickCheckBox_IsChecked = obj.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.CheckBox.IsCheckedProperty, DependencyPropertyChanged_ItemClickCheckBox_IsChecked);
                        }
                    }
                }
                public void DependencyPropertyChanged_SwipeCheckBox_IsChecked(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    GridViewPage_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        global::Windows.UI.Xaml.Controls.CheckBox obj = sender as global::Windows.UI.Xaml.Controls.CheckBox;
        if (obj != null)
        {
            bindings.Update_SwipeCheckBox_IsChecked(obj.IsChecked, DATA_CHANGED);
        }
                    }
                    else
                    {
                        ReleaseAllListeners();
                    }
                }
                private global::Windows.UI.Xaml.Controls.CheckBox cache_SwipeCheckBox = null;
                private long tokenDPC_SwipeCheckBox_IsChecked = 0;
                public void UpdateChildListeners_SwipeCheckBox(global::Windows.UI.Xaml.Controls.CheckBox obj)
                {
                    if (obj != cache_SwipeCheckBox)
                    {
                        if (cache_SwipeCheckBox != null)
                        {
                            cache_SwipeCheckBox.UnregisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.CheckBox.IsCheckedProperty, tokenDPC_SwipeCheckBox_IsChecked);
                            cache_SwipeCheckBox = null;
                        }
                        if (obj != null)
                        {
                            tokenDPC_SwipeCheckBox_IsChecked = obj.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.CheckBox.IsCheckedProperty, DependencyPropertyChanged_SwipeCheckBox_IsChecked);
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 16:
                {
                    this.Example1 = (global::AppUIBasics.ControlPages.ControlExample)(target);
                }
                break;
            case 17:
                {
                    this.ExampleAccessories = (global::AppUIBasics.ControlPages.ControlExample)(target);
                }
                break;
            case 18:
                {
                    this.ClickOutput = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 19:
                {
                    this.SelectionOutput = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 20:
                {
                    this.Control2 = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 21:
                {
                    this.ItemClickCheckBox = (global::Windows.UI.Xaml.Controls.CheckBox)(target);
                    #line 85 "..\..\..\ControlPages\GridViewPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.CheckBox)this.ItemClickCheckBox).Click += this.ItemClickCheckBox_Click;
                    #line default
                }
                break;
            case 22:
                {
                    this.SwipeCheckBox = (global::Windows.UI.Xaml.Controls.CheckBox)(target);
                }
                break;
            case 23:
                {
                    this.DragCheckBox = (global::Windows.UI.Xaml.Controls.CheckBox)(target);
                }
                break;
            case 24:
                {
                    global::Windows.UI.Xaml.Controls.ComboBox element24 = (global::Windows.UI.Xaml.Controls.ComboBox)(target);
                    #line 88 "..\..\..\ControlPages\GridViewPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.ComboBox)element24).SelectionChanged += this.SelectionModeComboBox_SelectionChanged;
                    #line default
                }
                break;
            case 25:
                {
                    global::Windows.UI.Xaml.Controls.RadioButton element25 = (global::Windows.UI.Xaml.Controls.RadioButton)(target);
                    #line 75 "..\..\..\ControlPages\GridViewPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.RadioButton)element25).Click += this.ItemTemplate_Click;
                    #line default
                }
                break;
            case 26:
                {
                    global::Windows.UI.Xaml.Controls.RadioButton element26 = (global::Windows.UI.Xaml.Controls.RadioButton)(target);
                    #line 76 "..\..\..\ControlPages\GridViewPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.RadioButton)element26).Click += this.ItemTemplate_Click;
                    #line default
                }
                break;
            case 27:
                {
                    global::Windows.UI.Xaml.Controls.RadioButton element27 = (global::Windows.UI.Xaml.Controls.RadioButton)(target);
                    #line 77 "..\..\..\ControlPages\GridViewPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.RadioButton)element27).Click += this.ItemTemplate_Click;
                    #line default
                }
                break;
            case 28:
                {
                    global::Windows.UI.Xaml.Controls.RadioButton element28 = (global::Windows.UI.Xaml.Controls.RadioButton)(target);
                    #line 78 "..\..\..\ControlPages\GridViewPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.RadioButton)element28).Click += this.ItemTemplate_Click;
                    #line default
                }
                break;
            case 29:
                {
                    global::Windows.UI.Xaml.Controls.Primitives.ToggleButton element29 = (global::Windows.UI.Xaml.Controls.Primitives.ToggleButton)(target);
                    #line 80 "..\..\..\ControlPages\GridViewPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.Primitives.ToggleButton)element29).Click += this.FlowDirectionCheckBox_Click;
                    #line default
                }
                break;
            case 34:
                {
                    this.itemTemplate = (global::Windows.UI.Xaml.Documents.Run)(target);
                }
                break;
            case 35:
                {
                    this.Control1 = (global::Windows.UI.Xaml.Controls.GridView)(target);
                    #line 68 "..\..\..\ControlPages\GridViewPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.GridView)this.Control1).SelectionChanged += this.Control1_SelectionChanged;
                    #line 68 "..\..\..\ControlPages\GridViewPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.GridView)this.Control1).ItemClick += this.Control1_ItemClick;
                    #line default
                }
                break;
            case 36:
                {
                    this.WideLayout = (global::Windows.UI.Xaml.VisualState)(target);
                }
                break;
            case 37:
                {
                    this.NarrowLayout = (global::Windows.UI.Xaml.VisualState)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1:
                {
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    GridViewPage_obj1_Bindings bindings = new GridViewPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);                
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                }
                break;
            case 2:
                {
                    global::Windows.UI.Xaml.Controls.StackPanel element2 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                    GridViewPage_obj2_Bindings bindings = new GridViewPage_obj2_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot((global::AppUIBasics.Data.ControlInfoDataGroup) element2.DataContext);                
                      element2.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element2, bindings);
                }
                break;
            case 4:
                {
                    global::Windows.UI.Xaml.Controls.StackPanel element4 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                    GridViewPage_obj4_Bindings bindings = new GridViewPage_obj4_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot((global::AppUIBasics.Data.ControlInfoDataGroup) element4.DataContext);                
                      element4.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element4, bindings);
                }
                break;
            case 9:
                {
                    global::Windows.UI.Xaml.Controls.StackPanel element9 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                    GridViewPage_obj9_Bindings bindings = new GridViewPage_obj9_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot((global::AppUIBasics.Data.ControlInfoDataGroup) element9.DataContext);                
                      element9.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element9, bindings);
                }
                break;
            case 13:
                {
                    global::Windows.UI.Xaml.Controls.StackPanel element13 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                    GridViewPage_obj13_Bindings bindings = new GridViewPage_obj13_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot((global::AppUIBasics.Data.ControlInfoDataGroup) element13.DataContext);                
                      element13.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element13, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

