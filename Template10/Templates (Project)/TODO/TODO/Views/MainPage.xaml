<Page
    x:Class="Template10.Views.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Template10.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="using:Template10.ViewModels"
    xmlns:models="using:Template10.Models"
    x:Name="ThisPage" 
    mc:Ignorable="d">

    <!--#region Resources -->

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="..\Styles\StarRadioButtonStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <SolidColorBrush x:Key="PrimaryBrush" Color="SteelBlue" />
            <ElementTheme x:Key="PrimaryTheme">Dark</ElementTheme>
            <SolidColorBrush x:Key="SecondaryBrush" Color="Gainsboro" />
            <ElementTheme x:Key="SecondaryTheme">Dark</ElementTheme>
            
            <DataTemplate x:Key="TodoListTemplate">
                <Grid Width="456" VerticalAlignment="Stretch" Margin="0,0,12,12">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <!-- header color -->
                    <Rectangle Grid.Row="0" Fill="{StaticResource PrimaryBrush}" />

                    <!-- list title -->
                    <TextBlock Tapped="List_Tapped" 
                               RequestedTheme="Dark" IsHitTestVisible="False"
        				       Margin="24,12" FontSize="34" FontWeight="Light" 
        				       Grid.Row="0" Text="{Binding TodoList.Title}" />

                    <ListView Padding="0,0,0,12" Margin="0,0,0,12" Grid.Row="1"
                            Background="{StaticResource SecondaryBrush}" RequestedTheme="Light"
                            IsItemClickEnabled="True" ItemClick="TodoItem_ItemClicked"
        					ItemsSource="{Binding Items}" VerticalAlignment="Top" 
        					SelectedItem="{Binding SelectedItem, Mode=TwoWay}">

                        <ListView.ItemContainerTransitions>
                            <TransitionCollection>
                                <AddDeleteThemeTransition />
                            </TransitionCollection>
                        </ListView.ItemContainerTransitions>

                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="Padding" Value="24,0,0,0" />
                                <Setter Property="Margin" Value="0,0,0,0" />
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            </Style>
                        </ListView.ItemContainerStyle>

                        <!-- create new item -->
                        <ListView.Header>
                            <TextBox KeyDown="TextBox_KeyDown" 
                                     PlaceholderText="Add a new task" 
                                     Margin="24,12,24,12" />
                        </ListView.Header>

                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Grid Height="48">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="48" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="48" />
                                    </Grid.ColumnDefinitions>

                                    <!-- item checked -->
                                    <CheckBox IsChecked="{Binding TodoItem.IsComplete, Mode=TwoWay}" Grid.Column="0" VerticalAlignment="Center" Height="32" Width="32" />
                                    <!-- item title -->
                                    <TextBlock Grid.Column="1" VerticalAlignment="Center" Text="{Binding TodoItem.Title}" FontWeight="Normal" LineHeight="20" />
                                    <!-- item strikethrough -->
                                    <Line Visibility="{Binding TodoItem.IsComplete, Converter={StaticResource VisibleWhenTrueConverter}}" Grid.Column="1" Stretch="Fill" Stroke="Black" StrokeThickness="1" X1="1" VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="0,0,24,0" />
                                    <!-- item star -->
                                    <CheckBox IsChecked="{Binding TodoItem.IsFavorite, Mode=TwoWay}" Grid.Column="2" VerticalAlignment="Center" Height="32" Width="32" Style="{StaticResource StarCheckBoxStyle}" />

                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </Grid>
            </DataTemplate>

        </ResourceDictionary>
    </Page.Resources>

    <!--#endregion-->

    <Page.DataContext>
        <vm:MainPageViewModel />
    </Page.DataContext>

    <Grid>

        <!--#region Visual States -->

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="VisualStateGroup">
                <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0:0:0.3"/>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Row)" Storyboard.TargetName="commandBar">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Int32>3</x:Int32>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HorizontalView" d:IsOptimized="True"/>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" Storyboard.TargetName="HorizontalView">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Boolean>False</x:Boolean>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="RemoveListButton">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Visible</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="600" />
                    </VisualState.StateTriggers>
                    <Storyboard>
                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="VerticalView" d:IsOptimized="True"/>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" Storyboard.TargetName="VerticalView">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Boolean>False</x:Boolean>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <!--#endregion-->

        <Grid>

            <Grid.RowDefinitions>
                <!-- title bar -->
                <RowDefinition Height="32" />
                <!-- top app bar-->
                <RowDefinition Height="Auto" />
                <!-- page content -->
                <RowDefinition />
                <!-- bottom app bar -->
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <!-- page title -->
            <Rectangle Grid.Row="0" x:Name="AppTitle" />
            <TextBlock Grid.Row="0" Foreground="White" Text="CONTOSO STACKS" 
                       FontSize="15" Margin="12,0" VerticalAlignment="Center" />

            <!-- top/bottom app bar -->
            <CommandBar x:Name="commandBar" Grid.Row="1" Background="SteelBlue" RequestedTheme="Dark">
                <AppBarButton Icon="Add" Label="New list" Command="{Binding AddListCommand}" />
                <AppBarButton Icon="Delete" Label="Delete list" 
                              x:Name="RemoveListButton" Visibility="Collapsed">
                    <AppBarButton.Flyout>
                        <Flyout Placement="Top">
                            <Button Content="Confirm delete" 
                              Command="{Binding RemoveListCommand}"
                              CommandParameter="{Binding SelectedTodoList}" />
                        </Flyout>
                    </AppBarButton.Flyout>
                </AppBarButton>
            </CommandBar>

            <!-- horizontal view -->
            <Hub Grid.Row="2" x:Name="HorizontalView">
                <HubSection VerticalContentAlignment="Stretch">
                    <DataTemplate>
                        <ItemsControl ItemsSource="{Binding TodoLists}"
                              ItemTemplate="{StaticResource TodoListTemplate}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </DataTemplate>
                </HubSection>
            </Hub>

            <!-- vertical view -->
            <Pivot Grid.Row="2" x:Name="VerticalView"
                   ItemsSource="{Binding TodoLists}"
                   VerticalContentAlignment="Stretch"
                   SelectedItem="{Binding SelectedTodoList, Mode=TwoWay}"
                   ItemTemplate="{StaticResource TodoListTemplate}">
                <Pivot.HeaderTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding TodoList.Title}" />
                    </DataTemplate>
                </Pivot.HeaderTemplate>
            </Pivot>

        </Grid>

        <!-- busy indicator -->
        <Popup IsOpen="{Binding Busy}" VerticalAlignment="Center" HorizontalAlignment="Center">
            <Grid Background="{ThemeResource ContentDialogBorderThemeBrush}" Height="100" Width="200">
                <Grid.RenderTransform>
                    <TranslateTransform X="-100" Y="-50" />
                </Grid.RenderTransform>
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                    <ProgressRing VerticalAlignment="Center" IsActive="True" Foreground="{ThemeResource ContentDialogDimmingThemeBrush}" />
                    <TextBlock Foreground="{ThemeResource ContentDialogDimmingThemeBrush}" Text="Loading" FontSize="22" FontWeight="Light" Margin="12,0,0,0" />
                </StackPanel>
            </Grid>
        </Popup>

    </Grid>
</Page>
